# Generated by Django 5.2.4 on 2025-07-08 16:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(max_length=200)),
                ('venue', models.CharField(blank=True, max_length=200)),
                ('website', models.URLField(blank=True)),
                ('registration_url', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='event_images/')),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('website', models.URLField(blank=True)),
                ('photo', models.ImageField(blank=True, upload_to='profile_photos/')),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('institution', models.CharField(max_length=200)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('bio', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('photo', models.ImageField(blank=True, upload_to='researcher_photos/')),
                ('research_areas', models.TextField(help_text='Comma-separated research areas')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('authors', models.CharField(max_length=1000)),
                ('year', models.IntegerField()),
                ('reference_type', models.CharField(choices=[('paper', 'Paper'), ('book', 'Book'), ('thesis', 'Thesis'), ('preprint', 'Preprint'), ('article', 'Article')], max_length=20)),
                ('journal', models.CharField(blank=True, max_length=200)),
                ('volume', models.CharField(blank=True, max_length=50)),
                ('pages', models.CharField(blank=True, max_length=50)),
                ('doi', models.CharField(blank=True, max_length=100)),
                ('url', models.URLField(blank=True)),
                ('pdf_file', models.FileField(blank=True, upload_to='references/')),
                ('abstract', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.researcher')),
            ],
            options={
                'ordering': ['-year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('website', models.URLField(blank=True)),
                ('repository', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='project_images/')),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collaborators', models.ManyToManyField(blank=True, related_name='collaborating_projects', to='main.researcher')),
                ('lead_researcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_projects', to='main.researcher')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True)),
                ('featured_image', models.ImageField(blank=True, upload_to='post_images/')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('is_published', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_projects', models.ManyToManyField(blank=True, to='main.project')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.researcher')),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('role', models.CharField(blank=True, max_length=100)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_organizers', to='main.event')),
                ('researcher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.researcher')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='organizers',
            field=models.ManyToManyField(blank=True, related_name='organized_events', to='main.researcher'),
        ),
        migrations.AddField(
            model_name='event',
            name='speakers',
            field=models.ManyToManyField(blank=True, related_name='speaking_events', to='main.researcher'),
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, upload_to='speaker_photos/')),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_speakers', to='main.event')),
                ('researcher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.researcher')),
            ],
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('abstract', models.TextField(blank=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('slides', models.FileField(blank=True, upload_to='talk_slides/')),
                ('video_url', models.URLField(blank=True)),
                ('room', models.CharField(blank=True, max_length=100)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talks', to='main.event')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.researcher')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
    ]
